CREATE TABLE STANDARD_REPORT
(
	REPORT_ID INTEGER NOT NULL,
	BASED_ON_TEMPLATE INTEGER,
	PRIMARY KEY (REPORT_ID),
	KEY (REPORT_ID),
	KEY (BASED_ON_TEMPLATE)
) 
;


CREATE TABLE CUSTOMIZED_REPORT
(
	REPORT_ID INTEGER NOT NULL,
	BASED_ON INTEGER,
	PRIMARY KEY (REPORT_ID),
	KEY (BASED_ON),
	KEY (REPORT_ID)
) 
;


CREATE TABLE REPORT_COLUMN
(
	ID INTEGER NOT NULL,
	COLUMN_NUMBER INTEGER,
	LABEL VARCHAR(255),
	FIELD_ID VARCHAR(255),
	PROPERTY_TYPE VARCHAR(255),
	PROPERTY_NAME VARCHAR(255),
	IS_PREFERRED BOOL,
	REPRESENTATIONAL_FORM VARCHAR(255),
	SOURCE VARCHAR(255),
	QUALIFIER_NAME VARCHAR(255),
	QUALIFIER_VALUE VARCHAR(255),
	DELIMITER CHAR(1),
	CONDITIONAL_COLUMN INTEGER DEFAULT -1,
	BELONGS_TO INTEGER,
	PRIMARY KEY (ID),
	UNIQUE (COLUMN_NUMBER),
	KEY (BELONGS_TO)
) 
;


CREATE TABLE REPORT
(
	ID INTEGER NOT NULL,
	LABEL VARCHAR(255),
	LAST_MODIFIED DATETIME,
	PATH_NAME VARCHAR(255),
	HAS_FORMAT INTEGER,
	HAS_STATUS INTEGER,
	MODIFIED_BY BIGINT,
	CREATED_BY BIGINT,
	PRIMARY KEY (ID),
	KEY (HAS_FORMAT),
	KEY (HAS_STATUS)
) 
;


CREATE TABLE CUSTOMIZED_QUERY
(
	ID INTEGER NOT NULL,
	QUERY_EXPRESSION VARCHAR(255),
	CODING_SCHEME_NAME VARCHAR(255),
	CODING_SCHEME_VERSION VARCHAR(255),
	CREATED_BY BIGINT,
	LAST_MODIFIED DATETIME,
	PRIMARY KEY (ID),
	KEY (CREATED_BY)
) 
;


CREATE TABLE USER
(
	ID BIGINT NOT NULL,
	LOGIN_NAME VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
) 
;


CREATE TABLE STANDARD_REPORT_TEMPLATE
(
	ID INTEGER NOT NULL,
	LABEL VARCHAR(255),
	ROOT_CONCEPT_CODE VARCHAR(255),
	ASSOCIATION_NAME VARCHAR(255),
	DIRECTION BOOL DEFAULT FALSE,
	CODING_SCHEME_NAME VARCHAR(255),
	CODING_SCHEME_VERSION VARCHAR(255),
	LEVEL INTEGER DEFAULT -1,
	DELIMITER CHAR(1) DEFAULT '$',
	PRIMARY KEY (ID)
) 
;


CREATE TABLE REPORT_STATUS
(
	ID INTEGER NOT NULL,
	LABEL VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	ACTIVE BOOL,
	PRIMARY KEY (ID)
) 
;


CREATE TABLE REPORT_FORMAT
(
	ID INTEGER NOT NULL,
	DESCRIPTION VARCHAR(255),
	PRIMARY KEY (ID)
) 
;





ALTER TABLE STANDARD_REPORT ADD CONSTRAINT FK_STANDARD_REPORT_REPORT 
	FOREIGN KEY (REPORT_ID) REFERENCES REPORT (ID)
;

ALTER TABLE STANDARD_REPORT ADD CONSTRAINT FK_STANDARD_REPORT_STANDARD_REPORT_TEMPLATE 
	FOREIGN KEY (BASED_ON_TEMPLATE) REFERENCES STANDARD_REPORT_TEMPLATE (ID)
;

ALTER TABLE CUSTOMIZED_REPORT ADD CONSTRAINT FK_CUSTOMIZED_REPORT_CUSTOMIZED_QUERY 
	FOREIGN KEY (BASED_ON) REFERENCES CUSTOMIZED_QUERY (ID)
;

ALTER TABLE CUSTOMIZED_REPORT ADD CONSTRAINT FK_CUSTOMIZED_REPORT_REPORT 
	FOREIGN KEY (REPORT_ID) REFERENCES REPORT (ID)
	ON DELETE CASCADE
;

ALTER TABLE REPORT_COLUMN ADD CONSTRAINT FK_REPORT_COLUMN_STANDARD_REPORT_TEMPLATE 
	FOREIGN KEY (BELONGS_TO) REFERENCES STANDARD_REPORT_TEMPLATE (ID)
;

ALTER TABLE REPORT ADD CONSTRAINT FK_REPORT_REPORT_FORMAT 
	FOREIGN KEY (HAS_FORMAT) REFERENCES REPORT_FORMAT (ID)
;

ALTER TABLE REPORT ADD CONSTRAINT FK_REPORT_REPORT_STATUS 
	FOREIGN KEY (HAS_STATUS) REFERENCES REPORT_STATUS (ID)
;

ALTER TABLE CUSTOMIZED_QUERY ADD CONSTRAINT FK_CUSTOMIZED_QUERY_USER 
	FOREIGN KEY (CREATED_BY) REFERENCES USER (ID)
;
